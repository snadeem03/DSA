package UserCreditionals;

import javax.swing.*;
import java.sql.*;

/**
 *
 * @author phani
 */
public class Amount extends javax.swing.JFrame {

     /**
      * Creates new form Amount
      */
     String CardNumber ;
     public Amount(String CardNumber)
     {
          initComponents();
          this.CardNumber = CardNumber ;
     }

     /**
      * This method is called from within the constructor to initialize the form.
      * WARNING: Do NOT modify this code. The content of this method is always
      * regenerated by the Form Editor.
      */
     @SuppressWarnings("unchecked")
     // <editor-fold defaultstate="collapsed" desc="Generated Code">
     private void initComponents() {

          jLabel1 = new javax.swing.JLabel();
          Amount = new javax.swing.JTextField();
          jLabel2 = new javax.swing.JLabel();
          jToggleButton1 = new javax.swing.JToggleButton();
          Enter = new javax.swing.JToggleButton();

          setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

          jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
          jLabel1.setText("Enter Amount to Send");

          jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 36)); // NOI18N
          jLabel2.setText("Amount");

          jToggleButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/arrow_back_FILL0_wght400_GRAD0_opsz48.png"))); // NOI18N
          jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jToggleButton1ActionPerformed(evt);
               }
          });

          Enter.setText("Enter");
          Enter.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    EnterActionPerformed(evt);
               }
          });

          javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
          getContentPane().setLayout(layout);
          layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                              .addGroup(layout.createSequentialGroup()
                                        .addGap(45, 45, 45)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                  .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                  .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                              .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap(280, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                  .addComponent(Enter, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                  .addGroup(layout.createSequentialGroup()
                                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGap(41, 41, 41)
                                                            .addComponent(Amount, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(445, 445, 445))
          );
          layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                              .addGroup(layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(80, 80, 80)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                  .addComponent(Amount, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                  .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(71, 71, 71)
                                        .addComponent(Enter, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(271, Short.MAX_VALUE))
          );

          pack();
     }// </editor-fold>

     private void EnterActionPerformed(java.awt.event.ActionEvent evt)
     {
          InsertInDataBase idb = new InsertInDataBase( CardNumber,"") ;
          String amount = idb.BalanceCheck();
          System.out.println("The amount is "+amount);
          int balance = Integer.parseInt(amount) ;
          amount = Amount.getText() ;
          int EnteredAmount = Integer.parseInt(amount) ;
          if(balance>EnteredAmount)
          {
               AddingWallet aw = new AddingWallet(Integer.parseInt(Amount.getText()),CardNumber) ;
               aw.addingToWallet();
               Successfull successfull = new Successfull() ;
               successfull.setVisible(true);
               this.dispose();
          }
          else
          {
               JOptionPane.showMessageDialog(this,"Insufficeint Balance");
          }
     }

     private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt)
     {
          HomeForm hf = new HomeForm() ;
          hf.setVisible(true);
          this.dispose();
     }


     // Variables declaration - do not modify
     private javax.swing.JTextField Amount;
     private javax.swing.JToggleButton Enter;
     private javax.swing.JLabel jLabel1;
     private javax.swing.JLabel jLabel2;
     private javax.swing.JToggleButton jToggleButton1;
     // End of variables declaration
}
class AddingWallet
{
     int Amount ;
     String CardNumber ;
     AddingWallet(int amount,String CardNumber)
     {
          this.Amount = amount ;
          this.CardNumber = CardNumber ;
     }
     public  void addingToWallet()
     {
          try
          {
               String tName = "e_bankingcreditionals" ;
               String balanceTable = HomeForm.MobileNumber+"_cardbalance" ;
               Class.forName(DataBaseDetails.driver) ;
               Connection con = DriverManager.getConnection(DataBaseDetails.url,DataBaseDetails.un,DataBaseDetails.pwd)  ;
               String wallet = "" ;
               Statement st = con.createStatement() ;
               ResultSet rs = st.executeQuery("select * from "+balanceTable+" where CardNumber ="+CardNumber) ;
               String balance = "" ;
               if(rs.next()) {
                    balance = rs.getString("Balance");
               }
               int bal = Integer.parseInt(balance) ;
               int totalbal = bal-Amount;
               Statement stBalance = con.createStatement() ;
               stBalance.executeUpdate("update "+balanceTable+" set Balance = "+String.valueOf(totalbal)+" where CardNumber ="+CardNumber);
               Statement stmt = con.createStatement() ;
               ResultSet rs1 = stmt.executeQuery("select * from "+tName+" where MobileNumber ="+HomeForm.MobileNumber) ;
               if(rs1.next()) wallet = rs1.getString("wallet") ;
               int amt = Amount+Integer.parseInt(wallet) ;
               wallet = String.valueOf(amt) ;
               Statement ps = con.createStatement() ;
               ps.executeUpdate("update "+tName+" set wallet ="+wallet+" where MobileNumber = "+HomeForm.MobileNumber) ;
               Statement statement = con.createStatement() ;
               statement.executeUpdate("insert into "+HomeForm.MobileNumber+"_transactions values('"+"Wallet"+"'"+","+"'"+"-----"+"'"+","+"'"+String.valueOf(Amount)+"'"+","+"'-----'"+","+"'----'"+","+"'"+CardNumber+"')") ;
               statement.close();
               con.close();
               ps.close();
               st.close();
               stmt.close();
          }
          catch (SQLException sql)
          {
               sql.printStackTrace();
          } catch (ClassNotFoundException e) {
               e.printStackTrace();
          }
     }
}
