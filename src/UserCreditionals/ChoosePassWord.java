package UserCreditionals;

import javax.swing.*;
import java.sql.*;

/**
 *
 * @author phani
 */
public class ChoosePassWord extends javax.swing.JFrame {

     /**
      * Creates new form ChoosePassWord
      */
     String form = "Login" ;
     String Email ;
     public ChoosePassWord()
     {
          initComponents() ;
     }
     public ChoosePassWord(String form,String Email)
     {
          initComponents() ;
          this.form = form ;
          this.Email = Email ;
     }
     /**
      * This method is called from within the constructor to initialize the form.
      * WARNING: Do NOT modify this code. The content of this method is always
      * regenerated by the Form Editor.
      */
     @SuppressWarnings("unchecked")
     // <editor-fold defaultstate="collapsed" desc="Generated Code">
     private void initComponents() {

          Back = new javax.swing.JButton();
          jLabel1 = new javax.swing.JLabel();
          jLabel2 = new javax.swing.JLabel();
          jLabel3 = new javax.swing.JLabel();
          ChoosePassWord = new javax.swing.JPasswordField();
          ConfirmPassWord = new javax.swing.JPasswordField();
          Update = new javax.swing.JButton();

          setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

          Back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/arrow_back_FILL0_wght400_GRAD0_opsz48.png"))); // NOI18N
          Back.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    BackActionPerformed(evt);
               }
          });

          jLabel1.setFont(new java.awt.Font("Sylfaen", 3, 36)); // NOI18N
          jLabel1.setText("Choose PassWord");

          jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
          jLabel2.setText("Choose Password");

          jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
          jLabel3.setText("Confirm PassWord");

          Update.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
          Update.setText("Update");
          Update.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    UpdateActionPerformed(evt);
               }
          });

          javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
          getContentPane().setLayout(layout);
          layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                              .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                  .addGroup(layout.createSequentialGroup()
                                                            .addGap(34, 34, 34)
                                                            .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                  .addGroup(layout.createSequentialGroup()
                                                            .addGap(136, 136, 136)
                                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                  .addGroup(layout.createSequentialGroup()
                                                            .addGap(324, 324, 324)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                      .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                                                      .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                      .addComponent(ChoosePassWord, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                                                                      .addComponent(ConfirmPassWord)))
                                                  .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                            .addContainerGap()
                                                            .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addContainerGap(430, Short.MAX_VALUE))
          );
          layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                              .addGroup(layout.createSequentialGroup()
                                        .addGap(37, 37, 37)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                  .addComponent(ConfirmPassWord, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                  .addGroup(layout.createSequentialGroup()
                                                            .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGap(18, 18, 18)
                                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGap(75, 75, 75)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                      .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                      .addComponent(ChoosePassWord, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addGap(48, 48, 48)
                                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(68, 68, 68)
                                        .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(223, Short.MAX_VALUE))
          );

          pack();
     }// </editor-fold>

     private void BackActionPerformed(java.awt.event.ActionEvent evt)
     {
         ForgetDetails fd = new ForgetDetails() ;
         fd.setVisible(true) ;
         this.dispose() ;
     }

     private void UpdateActionPerformed(java.awt.event.ActionEvent evt)
     {
          // TODO add your handling code here:
          String Choose = ChoosePassWord.getText() ;
          String Confirm = ConfirmPassWord.getText() ;
          if(Choose.length()>=6)
          {
               if(Choose.equals(Confirm))
               {
                    Update up = new Update(Email,Confirm) ;
                    up.UpdatePassWord();
                    if(form.equals("Login"))
                    {
                         LoginForm lf = new LoginForm() ;
                         lf.setVisible(true) ;
                         this.dispose() ;
                    }
                    else
                    {
                         Settings st = new Settings() ;
                         st.setVisible(true) ;
                         this.dispose() ;
                    }
               }
               else
               {
                    JOptionPane.showMessageDialog(this,"PassWords doesn't Match");
               }
          }
          else
          {
               JOptionPane.showMessageDialog(this,"PassWord must be 6 digits");
          }
     }

     // Variables declaration - do not modify
     private javax.swing.JButton Back;
     private javax.swing.JPasswordField ChoosePassWord;
     private javax.swing.JPasswordField ConfirmPassWord;
     private javax.swing.JButton Update;
     private javax.swing.JLabel jLabel1;
     private javax.swing.JLabel jLabel2;
     private javax.swing.JLabel jLabel3;
     // End of variables declaration
}
class Update
{
     String Email;
     String PassWord ;
     Update(String Email,String PassWord)
     {
          this.Email = Email ;
          this.PassWord = PassWord ;
     }
     public void UpdatePassWord()
     {
          try
          {
               Class.forName(DataBaseDetails.driver) ;
               Connection con = DriverManager.getConnection(DataBaseDetails.url,DataBaseDetails.un,DataBaseDetails.pwd) ;
               Statement st =  con.createStatement() ;
               PreparedStatement ps = con.prepareStatement("select * from e_bankingcreditionals where EMAIL=?") ;
               ps.setString(1,Email) ;
               ResultSet rs = ps.executeQuery() ;
               if(rs.next())
               {
                    String Mobile = rs.getString("MOBILENUMBER") ;
                    st.executeUpdate("Update e_bankingcreditionals set PASSWORD="+PassWord+" where MOBILENUMBER="+Mobile+"") ;
               }
               st.close();
               con.close();
          }
          catch (SQLException sql)
          {
               sql.printStackTrace();
          } catch (ClassNotFoundException e)
          {
               e.printStackTrace();
          }
     }
}