package UserCreditionals;

import javax.swing.*;
import java.sql.*;

/**
 *
 * @author phani
 */
public class TransferMoneyViaNumber extends javax.swing.JFrame {

     /**
      * Creates new form TransferMoneyViaNumber
      */
     String CardNumber ;
     String bank ;
     public TransferMoneyViaNumber(String CardNumber)
     {
          initComponents();
          this.CardNumber = CardNumber ;
     }
     public TransferMoneyViaNumber(String CardNumber,String bank)
     {
          initComponents();
          this.CardNumber = CardNumber ;
          this.bank = bank ;
     }
     /**
      * This method is called from within the constructor to initialize the form.
      * WARNING: Do NOT modify this code. The content of this method is always
      * regenerated by the Form Editor.
      */
     @SuppressWarnings("unchecked")
     // <editor-fold defaultstate="collapsed" desc="Generated Code">
     private void initComponents() {

          jLabel1 = new javax.swing.JLabel();
          BACK = new javax.swing.JButton();
          jLabel2 = new javax.swing.JLabel();
          mobileNumber = new javax.swing.JTextField();
          jLabel3 = new javax.swing.JLabel();
          amount = new javax.swing.JTextField();
          Transfer = new javax.swing.JButton();

          setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

          jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
          jLabel1.setText("TRANSFER MONEY VIA E_BANKING MOBILE");

          BACK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/arrow_back_FILL0_wght400_GRAD0_opsz48.png"))); // NOI18N
          BACK.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    BACKActionPerformed(evt);
               }
          });

          jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
          jLabel2.setText("MOBILE NUMBER");

          jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
          jLabel3.setText("Enter Amount");

          Transfer.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
          Transfer.setText("Transfer");
          Transfer.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    TransferActionPerformed(evt);
               }
          });

          javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
          getContentPane().setLayout(layout);
          layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                              .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                  .addGroup(layout.createSequentialGroup()
                                                            .addGap(37, 37, 37)
                                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                  .addGroup(layout.createSequentialGroup()
                                                            .addGap(19, 19, 19)
                                                            .addComponent(BACK, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                  .addGroup(layout.createSequentialGroup()
                                                            .addGap(339, 339, 339)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                      .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                      .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE))
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                      .addComponent(mobileNumber)
                                                                      .addComponent(amount, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE))))
                                        .addContainerGap(364, Short.MAX_VALUE))
                              .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(Transfer, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(419, 419, 419))
          );
          layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                              .addGroup(layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(BACK, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(92, 92, 92)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                  .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                  .addComponent(mobileNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(42, 42, 42)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                  .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                  .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(53, 53, 53)
                                        .addComponent(Transfer, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(274, Short.MAX_VALUE))
          );

          pack();
     }// </editor-fold>

     private void BACKActionPerformed(java.awt.event.ActionEvent evt)
     {
         HomeForm hf = new HomeForm() ;
         hf.setVisible(true);
         this.dispose();
     }

     private void TransferActionPerformed(java.awt.event.ActionEvent evt)
     {
         String MobileNumber = mobileNumber.getText() ;
         String Amount = amount.getText() ;
         /**
          * First we have to check whether the given mobile Number is Valid or not by using
          * the RegEx in theRegEx class
          */
         if(new RegExCheck("",MobileNumber).MobileNumberCheck())
         {
              /**
               Now we have to check whether the given Mobile Number is already registered
               in  the  e_banking database or not . if it is not registered we have to show
               that the Mobile Number doesn't have an account.
               */
              if(new check(MobileNumber).check())
              {
                   /**
                    Now we have to check whether the entered amount are sufficient the bank
                    or not.
                    */
                   InsertInDataBase idb = new InsertInDataBase(CardNumber,"");
                   String balance = idb.BalanceCheck() ;
                   Integer totalBalance = Integer.parseInt(balance) ;
                   Integer Entered = Integer.parseInt(amount.getText()) ;
                   if(Entered<totalBalance)
                   {
                        /**
                         Now we have to update the amount in our card that how much amount
                         we transfered and we have to add the amount in to wallet of the
                         transferred Person Number... Because the transfer through mobile Number
                         means is just transferring in to the Wallet of that person.
                         */
                        if(bank.equals("Bank"))
                        {
                             AccountMoneyTransfer amt = new AccountMoneyTransfer(MobileNumber, CardNumber, Amount, balance);
                             amt.CutAmount();
                             amt.AddAmount();
                             Successfull sc = new Successfull();
                             sc.setVisible(true);
                             this.dispose();
                        }
                        else
                        {
                             AccountMoneyTransfer amt = new AccountMoneyTransfer(MobileNumber, CardNumber, Amount, balance);
                             amt.CutAmount();
                             amt.AddWallet();
                             Successfull sc = new Successfull();
                             sc.setVisible(true);
                             this.dispose();
                        }
                   }
                   else
                   {
                        JOptionPane.showMessageDialog(this,"In-Sufficeint Balance");
                   }
              }
              else
              {
                   JOptionPane.showMessageDialog(this,"Mobile Number doesn't exists ");
              }
         }
         else
         {
              JOptionPane.showMessageDialog(this,"Incorrect Mobile Number");
         }
     }



     // Variables declaration - do not modify
     private javax.swing.JButton BACK;
     private javax.swing.JButton Transfer;
     private javax.swing.JTextField amount;
     private javax.swing.JLabel jLabel1;
     private javax.swing.JLabel jLabel2;
     private javax.swing.JLabel jLabel3;
     private javax.swing.JTextField mobileNumber;
     // End of variables declaration
}
class check
{
     String MobileNumber ;
     check(String MobileNumber)
     {
          this.MobileNumber = MobileNumber ;
     }
     /**
      Here also we can use the AVL tree for searching in O(logn)
      * */
     public  boolean check()
     {
          try
          {
              Class.forName(DataBaseDetails.driver) ;
              Connection con = DriverManager.getConnection(DataBaseDetails.url,DataBaseDetails.un,DataBaseDetails.pwd) ;
               Statement st = con.createStatement() ;
              ResultSet rs = st.executeQuery("select * from e_bankingcreditionals") ;
              while(rs.next())
              {
                   String mb = rs.getString("MOBILENUMBER") ;
                   if(mb.equals(MobileNumber))
                   {
                        return true ;
                   }
              }
              st.close();
              con.close();
          }
          catch (SQLException sql)
          {
              sql.printStackTrace();
          }
          catch (ClassNotFoundException e)
          {
               e.printStackTrace();
          }
         return false ;
     }

}
